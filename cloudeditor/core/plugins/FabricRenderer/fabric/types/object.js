//[web-resource] https://medium.freecodecamp.org/react-pattern-centralized-proptypes-f981ff672f3b
const {
  shape,
  number,
  string,
  bool,
  object,
  array,
  oneOf,
  oneOfType,
  instanceOf,
  arrayOf
} = require("prop-types");

const { fabric } = require("../../../../rewrites/fabric/fabric");

const objectTypes = arrayOf(
  shape({
    angle: number,
    backgroundColor: string,
    borderColor: string,
    borderDashArray: array,
    borderOpacityWhenMoving: number,
    borderScaleFactor: number,
    cacheProperties: array,
    centeredRotation: bool,
    centeredScaling: bool,
    cornerColor: string,
    cornerDashArray: array,
    cornerSize: number,
    cornerStrokeColor: string,
    cornerStyle: string,
    dirty: bool,
    evented: bool,
    excludeFromExport: bool,
    fill: string,
    fillRule: string,
    flipX: bool,
    flipY: bool,
    globalCompositeOperation: string,
    hasBorders: bool,
    hasControls: bool,
    hasRotatingPoint: bool,
    height: number,
    hoverCursor: string,
    includeDefaultValues: bool,
    left: number,
    lockMovementX: bool,
    lockMovementY: bool,
    lockRotation: bool,
    lockScalingFlip: bool,
    lockScalingX: bool,
    lockScalingY: bool,
    lockSkewingX: bool,
    lockSkewingY: bool,
    lockUniScaling: bool,
    matrixCache: object,
    minScaleLimit: number,
    moveCursor: string,
    noScaleCache: bool,
    objectCaching: bool,
    oCoords: object,
    opacity: number,
    originX: oneOf(["left", "right", "center"]),
    originY: oneOf(["top", "bottom", "center"]),
    ownMatrixCache: object,
    padding: number,
    paintFirst: oneOf(["fill", "stroke"]),
    perPixelTargetFind: bool,
    rotatingPointOffset: number,
    scaleX: number,
    scaleY: number,
    selectable: bool,
    selectionBackgroundColor: string,
    shadow: oneOfType([instanceOf(fabric.Shadow), string]),
    skewX: number,
    skewY: number,
    statefullCache: bool,
    stateProperties: array,
    stroke: string,
    strokeDashArray: array,
    strokeLineCap: oneOf(["butt", "round", "square"]),
    strokeLineJoin: oneOf(["bevil", "round", "miter"]),
    strokeMiterLimit: number,
    strokeWidth: number,
    top: number,
    transformMatrix: array,
    transparentCorners: bool,
    type: string,
    visible: bool,
    width: number
  })
).isRequired;

const objectDefaults = {
  angle: 0,
  backgroundColor: "",
  borderColor: "rgba(153, 209, 34, 1)",
  borderDashArray: null,
  borderOpacityWhenMoving: 0.8,
  borderScaleFactor: 1,
  cacheProperties: (
    "fill stroke strokeWidth strokeDashArray width height paintFirst" +
    " strokeLineCap strokeLineJoin strokeMiterLimit backgroundColor"
  ).split(" "),
  centeredRotation: true,
  centeredScaling: false,
  cornerColor: "rgba(153, 209, 34, 1)",
  cornerDashArray: null,
  cornerSize: 10,
  cornerStrokeColor: null,
  cornerStyle: "rect",
  dirty: true,
  evented: true,
  excludeFromExport: false,
  fill: "rgb(0,0,0)",
  fillRule: "nonzero",
  flipX: false,
  flipY: false,
  globalCompositeOperation: "source-over",
  hasBorders: true,
  hasControls: true,
  hasRotatingPoint: true,
  height: 0,
  hoverCursor: null,
  includeDefaultValues: true,
  left: 0,
  lockMovementX: false,
  lockMovementY: false,
  lockRotation: false,
  lockScalingFlip: false,
  lockScalingX: false,
  lockScalingY: false,
  lockSkewingX: false,
  lockSkewingY: false,
  lockUniScaling: false,
  //matrixCache: null,
  minScaleLimit: 0,
  moveCursor: null,
  noScaleCache: true,
  objectCaching: false,
  oCoords: null,
  opacity: 1,
  originX: "left",
  originY: "top",
  ownMatrixCache: null,
  padding: 0,
  paintFirst: "fill",
  perPixelTargetFind: false,
  rotatingPointOffset: 40,
  scaleX: 1,
  scaleY: 1,
  selectable: true,
  selectionBackgroundColor: "",
  shadow: null,
  skewX: 0,
  skewY: 0,
  statefullCache: false,
  stateProperties: (
    "top left width height scaleX scaleY flipX flipY originX originY transformMatrix " +
    "stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit " +
    "angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor " +
    "skewX skewY fillRule paintFirst"
  ).split(" "),
  stroke: null,
  strokeDashArray: null,
  strokeLineCap: "butt",
  strokeLineJoin: "miter",
  strokeMiterLimit: 4,
  strokeWidth: 0,
  top: 0,
  transformMatrix: null,
  transparentCorners: true,
  type: "object",
  visible: true,
  width: 0
};

module.exports = { objectTypes, objectDefaults };
